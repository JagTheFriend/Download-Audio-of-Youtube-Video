import Head from "next/head";
import { useEffect, useState } from "react";
import { useDebounceValue } from "usehooks-ts";
import LoadingSpinner from "~/components/LoadingSpinner";
import { Input } from "~/components/ui/input";
import { DataToSend } from "~/lib/type";
import { api } from "~/utils/api";

function Header() {
  return (
    <div className="m-2 mb-4 flex w-full flex-col items-center justify-center">
      <h2 className="cursor-pointer border-b-2 text-2xl transition-all hover:border-b-blue-500">
        Download audio of Youtube videos for free
      </h2>
    </div>
  );
}

function InputField() {
  const [songName, setSongName] = useDebounceValue("", 500);
  const [responseData, setResponseData] = useState<DataToSend[]>([]);
  const [isError, setIsError] = useState(false);
  const [isLoading, setIsLoading] = useState(false);
  const songsQuery = api.yt.searchSong.useQuery({ songName });

  useEffect(() => {
    if (songName) {
      songsQuery.refetch();
    }
  }, [songName, songsQuery.refetch]);

  useEffect(() => {
    if (songsQuery.data) {
      setResponseData(songsQuery.data);
    }
  }, [songsQuery.data]);

  useEffect(() => {
    if (songsQuery.error) {
      setIsError(true);
    }
  }, [songsQuery.error]);

  useEffect(() => {
    setIsLoading(songsQuery.isLoading);
  }, [songsQuery.isLoading]);

  return (
    <>
      <div className="mb-4 flex flex-col items-center justify-center gap-2">
        <Input
          type="text"
          placeholder="Enter Song Name"
          className="w-7/12"
          onChange={(e) => setSongName(e.target.value.trim())}
        />
        <button disabled={!songName} className="custom-btn btn-3" type="button">
          <span>Search</span>
        </button>
      </div>
      <div className="flex cursor-default justify-center gap-4">
        {isLoading && <LoadingSpinner spinnerColor="blue" />}
        {isError && !isLoading && (
          <p className="text-lg text-red-400 transition-all hover:text-red-500">
            Something went wrong
          </p>
        )}
      </div>
    </>
  );
}

export default function Home() {
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="min-w-screen flex max-h-full min-h-screen max-w-full flex-col">
        <Header />
        <InputField />
      </main>
    </>
  );
}
